{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/reservation.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\n\nfunction ReservationFormComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const area_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", area_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", area_r2.name, \" \");\n  }\n}\n\nfunction ReservationFormComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slot_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", slot_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(slot_r3);\n  }\n}\n\nexport let ReservationFormComponent = /*#__PURE__*/(() => {\n  class ReservationFormComponent {\n    constructor(fb, reservationService, http, router) {\n      this.fb = fb;\n      this.reservationService = reservationService;\n      this.http = http;\n      this.router = router;\n      this.areas = [];\n      this.timeSlots = ['9:00 AM - 12:00 PM', '12:00 PM - 3:00 PM', '3:00 PM - 6:00 PM'];\n    }\n\n    ngOnInit() {\n      this.reservationForm = this.fb.group({\n        areaId: ['', Validators.required],\n        name: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        date: ['', Validators.required],\n        time: ['', Validators.required]\n      });\n      this.loadAreas();\n    }\n\n    loadAreas() {\n      this.http.get('http://localhost:3002/areas').subscribe(data => {\n        console.log('AREAS LOADED:', data); // <-- لازم يظهر في الكونسول\n\n        this.areas = data;\n      }, error => {\n        console.error('Error loading areas:', error);\n      });\n    }\n\n    submit() {\n      if (this.reservationForm.valid) {\n        this.reservationService.addReservation(this.reservationForm.value).subscribe(() => {\n          this.reservationForm.reset();\n          this.router.navigate(['/thank-you']);\n        });\n      }\n    }\n\n  }\n\n  ReservationFormComponent.ɵfac = function ReservationFormComponent_Factory(t) {\n    return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ReservationService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  ReservationFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReservationFormComponent,\n    selectors: [[\"app-reservation-form\"]],\n    decls: 35,\n    vars: 4,\n    consts: [[1, \"reservation-form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"area\"], [\"id\", \"area\", \"formControlName\", \"areaId\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"date\"], [\"id\", \"date\", \"type\", \"date\", \"formControlName\", \"date\", \"required\", \"\"], [\"for\", \"time\"], [\"id\", \"time\", \"formControlName\", \"time\", \"required\", \"\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n    template: function ReservationFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"reservation-form works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ReservationFormComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Reserve Your Visit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Select Area:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 4);\n        i0.ɵɵelementStart(10, \"option\", 5);\n        i0.ɵɵtext(11, \"Select an area\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, ReservationFormComponent_option_12_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 2);\n        i0.ɵɵelementStart(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 2);\n        i0.ɵɵelementStart(18, \"label\", 9);\n        i0.ɵɵtext(19, \"Time Slot\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"select\", 10);\n        i0.ɵɵelementStart(21, \"option\", 5);\n        i0.ɵɵtext(22, \"Select a time slot\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, ReservationFormComponent_option_23_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelementStart(25, \"label\", 11);\n        i0.ɵɵtext(26, \"Your Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 2);\n        i0.ɵɵelementStart(29, \"label\", 13);\n        i0.ɵɵtext(30, \"Your Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 2);\n        i0.ɵɵelementStart(33, \"button\", 15);\n        i0.ɵɵtext(34, \"Submit Reservation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.areas);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.timeSlots);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", ctx.reservationForm.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i5.NgForOf, i1.DefaultValueAccessor, i1.RequiredValidator],\n    styles: [\".reservation-form-container[_ngcontent-%COMP%]{max-width:500px;margin:auto;padding:2rem;background:#f4f4f4;border-radius:10px}h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:1.5rem}.form-group[_ngcontent-%COMP%]{margin-bottom:1rem;display:flex;flex-direction:column}label[_ngcontent-%COMP%]{margin-bottom:.5rem;font-weight:bold}input[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{padding:.5rem;font-size:1rem}button[_ngcontent-%COMP%]{padding:.75rem;font-size:1rem;background-color:#1976d2;color:#fff;border:none;border-radius:5px;cursor:pointer;&:disabled{background-color:#ccc}}\"]\n  });\n  return ReservationFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}